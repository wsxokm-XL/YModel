print("hello world!")
q()
1+1
2*2
4/3
4//3
4//
4///3
4////
4%3
demo()
a=1+1
a
a=[]
for i in range(1,5)
quit
q()
```{r ex3}
x=pi*10^2
class(x)
typeof(x)
class(cars)
typeof(cars)
names(cars)
summary(cars)
head(cars)
tail(cars)
str(cars)
row.names(cars)
attributes(cars)
class(dist~speed)
plot(dist~speed,cars)
plot(cars$speed,cars$dist)
```
```{r ex3}
x=pi*10^2
class(x)
typeof(x)
class(cars)
typeof(cars)
names(cars)
summary(cars)
head(cars)
tail(cars)
str(cars)
row.names(cars)
attributes(cars)
class(dist~speed)
plot(dist~speed,cars)
plot(cars$speed,cars$dist)
```
x=pi*10^2
class(x)
typeof(x)
class(cars)
typeof(cars)
names(cars)
summary(cars)
head(cars)
tail(cars)
str(cars)
row.names(cars)
attributes(cars)
class(dist~speed)
plot(dist~speed,cars)
plot(cars$speed,cars$dist)
plot(dist~speed,cars)
```{r ex4}
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
names(cars)
cars[3]
table(cars[3])
is.factor(cars$qspeed)
plot(dist~qspeed,data=cars)
(a=lm(dist~qspeed,data=cars))
summary(a)
```
cars$qspeed=cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
cars$qspeed = cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
```{r ex4}
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
names(cars)
cars[3]
table(cars[3])
is.factor(cars$qspeed)
plot(dist~qspeed,data=cars)
(a=lm(dist~qspeed,data=cars))
summary(a)
```
cars$qspeed=cut(cars$speed,break=quantile(cars$speed),include.lowest=TRUE)
cars$qspeed=cut(cars$speed,breaks=quantile(cars$speed),include.lowest=TRUE)
```{r ex4}
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,breaks=quantile(cars$speed),include.lowest=TRUE)
names(cars)
cars[3]
table(cars[3])
is.factor(cars$qspeed)
plot(dist~qspeed,data=cars)
(a=lm(dist~qspeed,data=cars))
summary(a)
```
knitr::opts_chunk$set(echo = TRUE)
x=pi*10^2
class(x)
typeof(x)
class(cars)
typeof(cars)
names(cars)
summary(cars)
head(cars)
tail(cars)
str(cars)
row.names(cars)
attributes(cars)
class(dist~speed)
plot(dist~speed,cars)
plot(cars$speed,cars$dist)
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,breaks=quantile(cars$speed),include.lowest=TRUE)
names(cars)
cars[3]
table(cars[3])
is.factor(cars$qspeed)
plot(dist~qspeed,data=cars)
(a=lm(dist~qspeed,data=cars))
summary(a)
x=1:100
(x=1:100)
sample(x,20)
set.seed(0);sample(1:10,3)
z=sample(1:1:200000,10000)
z[1:10]
y=c(1,3,7,3,4,2)
z[y]
(z=sample(x,100,rep=T))
(z1=unique(z))
length(z1)
xz=setdiff(x,z)
sort(union(xz,z))
setequal(union(xz,z),x)
intersect(1:10,7:50)
sample(1:100,20,prob=1:100)
pi*10^2
"*"(pi,"^"(10,2))
pi*(1:10)^-2.3
x=pi*10^2 ; print(x)
(x=pi*10^2)
pi^(1:5)
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
```
```{r ex4}
ncol(cars)
dim(cars)
lm(dist~speed,data=cars)
cars$qspeed=cut(cars$speed,breaks=quantile(cars$speed),include.lowest=TRUE)
names(cars)
cars[3]
table(cars[3])
is.factor(cars$qspeed)
plot(dist~qspeed,data=cars)
(a=lm(dist~qspeed,data=cars))
summary(a)
```
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
min(x)
median(x)
mean(x)
var(x)
sd(x)
sqrt(var(x))
rank(x)
order(x)
order(x,decreasing=T)
x[order(x)]#sort(x)
sort(x)
sort(x,decreasing=T)#sort(x,dec=T)
sum(x);
round(x)
fivenum(x)
quantile(x)
quantile(x,c(0,.33,.66,1))
mad(x)
cummax(x)
cummin(x)
cumprod(x)
cor(x,sin(x/20))
```
## Including Plots
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
min(x)
median(x)
mean(x)
var(x)
sd(x)
sqrt(var(x))
rank(x)
order(x)
order(x,decreasing=T)
x[order(x)]#sort(x)
sort(x)
sort(x,decreasing=T)#sort(x,dec=T)
sum(x);
round(x)
fivenum(x)
quantile(x)
quantile(x,c(0,.33,.66,1))
mad(x)
cummax(x)
cummin(x)
cumprod(x)
cor(x,sin(x/20))
```
```{r ex5}
x<-round(runif(20,0,20),digits=2)
summary(x)
min(x)
median(x)
mean(x)
var(x)
sd(x)
sqrt(var(x))
rank(x)
order(x)
order(x,decreasing=T)
x[order(x)]#sort(x)
sort(x)
sort(x,decreasing=T)#sort(x,dec=T)
sum(x);
round(x)
fivenum(x)
quantile(x)
quantile(x,c(0,.33,.66,1))
mad(x)
cummax(x)
cummin(x)
cumprod(x)
cor(x,sin(x/20))
```
x<-round(runif(20,0,20),digits=2)
summary(x)
min(x)
median(x)
mean(x)
var(x)
sd(x)
sqrt(var(x))
rank(x)
order(x)
order(x,decreasing=T)
x[order(x)]#sort(x)
sort(x)
sort(x,decreasing=T)#sort(x,dec=T)
sum(x);
round(x)
fivenum(x)
quantile(x)
quantile(x,c(0,.33,.66,1))
mad(x)
cummax(x)
cummin(x)
cumprod(x)
cor(x,sin(x/20))
x=rnorm(200)
hist(x,co;="light blue")
rug(x)
stem(x)
x=rnorm(500)
y=x+rnorm(500)
plot(y~x)
a=lm(y~x)
abline(a,col="red")
print("Hello world!")
paste("x的最小值= ",min(x))
demo(graphics)
help(hist)
library(readxl)
returndaily<-read_excel('returndaily.xlsx')
x<-returndaily$SH_return_daily
#画出x直方图
y<-hist(x,breaks = 100)
x_breaks<-seq(min(x),max(x),length.out = 101)	#分成100个区间
y<-hist(x,breaks = x_breaks,freq = F)
y$breaks[2]-y$breaks[1]
y$counts
sum(y$density*(y$breaks[2]-y$breaks[1]))		#sum = 1
library(readxl)
rnorm
n=rnorm(50,1,5)
n
hist(n)
hist(n,density = 1)
hist(n,density = 5)
lines(n)
lines(n)
hist(n)
lines(density(n,bw=0.01))
lines(density(n,bw=0.1))
lines(density(n))
n=rnorm(500,1,5)
hist(n)
lines(density(n,bw=0.1))
lines(density(n,bw=0.001),col='blue')
lines(density(n,bw=0.01),col='blue')
lines(density(n,bw=1),col='blue')
hist(n,density = 5)
n=rnorm(500,100,5)
hist(n,density = 5)
lines(density(n,bw=1),col='blue')
lines(density(n,bw=0.1),col='blue')
lines(density(n,bw=0.01),col='blue')
lines(n)
qqnorm(n)
qqline(n)
qqline(n)
qqnorm(n)
qqline(n)
t<-rank(n)/length(n)
q<-qnorm(t)
t
plot(q,n)
qqnorm(n)
plot(q,n)
plot(q,n)
qqnorm(n)
qqnorm(n)
plot(q,n)
qqnorm(n)
plot(q,n,xlab = "Theoretical Quantiles",ylab = "Sample Quantiles",main="Normal Q-Q Plot")
qqnorm(n)
plot(q,n,xlab = "Theoretical Quantiles",ylab = "Sample Quantiles",main="Normal Q-Q Plot")
qqnorm(n)
plot(q,n,xlab = "Theoretical Quantiles",ylab = "Sample Quantiles",main="Normal Q-Q Plot")
qqnorm(n)
plot(q,n,xlab = "Theoretical Quantiles",ylab = "Sample Quantiles",main="Normal Q-Q Plot")
qqnorm(n)
plot(q,n,xlab = "Theoretical Quantiles",ylab = "Sample Quantiles",main="Normal Q-Q Plot")
qqnorm(n)
qqline(n,col=2,lwd=2)
qqline(n,col=2,lwd=2)
qqnorm(n)
qqline(n,col=2,lwd=2)
help(hist)
hist(n,probability = T)
hist(n,probability = F)
hist(n,probability = T)
hist(n,freq = 1)
hist(n,freq = NULL)
hist(n,freq = T)
hist(n,freq = 2)
hist(n,freq = TRUE)
hist(n,freq = FALSE)
hist(n,freq = TRUE)
hist(n,freq = FALSE)
hist(n,break=5,freq = FALSE)
hist(n,breaks=5,freq = FALSE)
hist(n,breaks=7,freq = FALSE)
hist(n,breaks=5,freq = FALSE)
hist(n,breaks=4,freq = FALSE)
hist(n,breaks=6,freq = FALSE)
hist(n,breaks=7,freq = FALSE)
hist(n)
hist(n,border = NULL)
hist(n,border = TRUE)
hist(n,border = FALSE)
hist(n,border = FALSE)
hist(n,border = TRUE)
hist(n,densit=2)
hist(n,densit=2,angle = 45)
hist(n,xlim = 5)
hist(n,xlim = range(1,5))
hist(n)
hist(n,xlim = range(85,115))
hist(n,plot=TRUE)
hist(n,plot=FALSE)
hist(n,labels = TRUE)
densti
density(n)
density(n,bw=0.01)
lines(density(n,bw=0.01))
lines(density(n))
lines(density(n),col='blue')
plot(density(n),col='blue')
lines(density(n),col='blue')
hist(n,labels = TRUE)
hist(n)
lines(density(n),col='blue')
lines(density(n),col='blue'，lwd=3)
lines(density(n),col=1，lwd=3)
lines(density(n),col=1.lwd=3)
lines(density(n),col=1,lwd=3)
lines(density(n),col=2,lwd=3)
n<-rexp(1000)
hist(n)
lines(density(n),col=2,lwd=3)
hist(n,probability = FALSE)
hist(n,probability = TRUE)
lines(density(n),col=2,lwd=3)
filename="C:/Users/hp/Desktop/生物统计/CMLC-dataset.xlsx"
df=read.csv(filename)
filename="C:/Users/hp/Desktop/CMLC-dataset.xlsx"
df=read.csv(filename)
df=read.csv(file=filename)
df=read.csv(file=filename,header = header)
df=read.csv(file=filename)
library(xlsx)
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlxs)
library(xlsx)
library("xlsx")
install.packages("xlsx")
library("xlsx")
df=read.xlsx(file=filename)
df=read.xlsx(file=filename,sheetIndex = 4)
df=read.xlsx(file=filename,sheetIndex =1)
df=read.xlsx(file=filename,sheetIndex=4)
df=read.xlsx(file=filename,sheetName = 4. 26,418 phosphosites)
df=read.xlsx(file=filename,sheetName = "4. 26,418 phosphosites")
df=read.xlsx2(file=filename,sheetName = "4. 26,418 phosphosites")
filename
df=read.csv("C:/Users/hp/Desktop/CMLC-dataset.csv")
quit
quit()
knitr::opts_chunk$set(echo = TRUE)
df=read.csv("C:/Users/hp/Desktop/data3.csv")
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5))
lines(density(df$CCDC187.S478),col=2)
qqnorm(df$CCDC187.S478,col=6)
qqline(df$CCDC187.S478,col=4)
df=read.csv("C:/Users/hp/Desktop/data3.csv")
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5))
lines(density(df$CCDC187.S478),col=2)
qqnorm(df$CCDC187.S478,col=6)
qqline(df$CCDC187.S478,col=4)
summary(df$CCDC187.S478)
fivenum(df$)
fivenum(df$CCDC187.S478)
hist(df$CCDC187.S478,freq = FALSE,col.fg=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5))
plot(df$CCDC187.S478,col.fg=3)
warnings()
plot(df$CCDC187.S478,fg=3)
plot(df$CCDC187.S478,bg=3)
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5),border="white")
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5))
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5))
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5),border="white")
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5),border=FALSE)
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5),border="red")
hist(df$CCDC187.S478,freq = FALSE,col=3,ylim=range(0,0.6),breaks=seq(-4,4,0.5),border=FALSE)
help(border)
help(hist.border)
help(hist)
setwd("C:/Users/hp/Desktop/protein")
setwd("C:/Users/hp/Desktop/protein/nesg")
data<-read.csv("nesg.csv")
View(data)
plot(data$sol,data$exp)
plot(data$sol,data$exp,cex=0.5)
cor(data$sol,data$exp)
d=0;for (i in rang(length(data$sol))){if(sol[i]==exp[i]) d++};d/length(data$sol)
d=0;for (i in rang(length(data$sol))){if(sol[i]==exp[i]) d++;};d/length(data$sol)
d=0;for (i in rang(length(data$sol))){if(sol[i]==exp[i]) d=d+1};d/length(data$sol)
d=0;for (i in range(length(data$sol))){if(sol[i]==exp[i]) d=d+1};d/length(data$sol)
d=0;for (i in range(length(data$sol))){if(data$sol[i]==data$exp[i]) d=d+1};d/length(data$sol)
d=0;for (i in range(length(data$sol))){if(data$sol[i]=data$exp[i]) d=d+1};d/length(data$sol)
d=0;for (i in range(length(data$sol))){if(data$sol[i]==data$exp[i]) d=d+1};d/length(data$sol)
d=0;for (i in range(length(data$sol))){if(data$sol[i]==data$exp[i]) d=d+1};print(d/length(data$sol))
d=0;for (i in range(length(data$sol))){if(data$sol[i]==data$exp[i]){d=d+1}};print(d/length(data$sol))
data$sol[2]
View(data)
d=0;for (i in 1:9703){if(data$sol[i]==data$exp[i]){d=d+1}};print(d/9703)
